{"version":3,"file":"static/js/3076.0f5fd133.chunk.js","mappings":"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","sources":["components/dashboard/setting/email/forms/ViewForm.tsx","pages/dashboard/setting/email/detail.tsx","../node_modules/@chakra-ui/card/src/card-body.tsx","../node_modules/@chakra-ui/card/src/card-context.tsx","../node_modules/@chakra-ui/card/src/card.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Stack, StackDivider, CardBody, Card } from \"@chakra-ui/react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { defaultForm } from \"utils/form\";\r\nimport TextInput from \"modules/forms/TextInput\";\r\nimport EmailType from \"components/dashboard/setting/email/inputs/EmailType\";\r\nimport { jsonParse } from \"utils/json\";\r\n\r\nconst ViewEmailForm = (props: any) => {\r\n  const form = defaultForm(useForm);\r\n  const [ emailType, setEmailType ] = useState<any>();\r\n  const { activedLanguage } = useSelector((state: any) => state.languageReducer); \r\n  const { detail } = useSelector((state: any) => state.emailReducer); \r\n\r\n  useEffect(() => {\r\n    if (detail.title) {\r\n      form.setValue('title', detail.title)\r\n    }\r\n    if (detail.content) {\r\n      form.setValue('content', detail.content)\r\n    }\r\n    setEmailType({value: detail?.type?.type, label: jsonParse(detail?.type?.typeName)[activedLanguage]})\r\n\r\n  }, [detail.title, detail.content]);\r\n\r\n  return (\r\n    <Card w='100%'>\r\n      <CardBody>\r\n        <Stack spacing=\"5\" divider={<StackDivider />}>\r\n          <TextInput {...form} typical='email-title' isDisabled={true} bg={'gray.100'}/>\r\n          <TextInput {...form} typical='email-content' isDisabled={true} bg={'gray.100'}/>\r\n          <EmailType value={emailType} onChange={setEmailType} isDisabled={true} />\r\n        </Stack> \r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ViewEmailForm;","import { actions } from \"components/dashboard/setting/email/slice\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { HStack, Stack } from '@chakra-ui/react'\r\nimport { Link, useLocation, useParams } from \"react-router-dom\";\r\nimport { FormButton } from \"modules/buttons/FormButton\";\r\nimport { makeUrl } from \"utils/link\";\r\nimport ViewEmailForm from \"components/dashboard/setting/email/forms/ViewForm\";\r\n\r\nconst DetailEmailPage = (props: any) => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation()\r\n  const { emailId } = useParams();\r\n  \r\n  useEffect(() => {\r\n    dispatch(actions.GET_DETAIL_ASYNC(emailId))\r\n  }, []);\r\n  \r\n  return (\r\n    <Stack>\r\n      <HStack pb={5}>\r\n        <FormButton typical='list' permission=\"email.view\" as={Link} to={makeUrl('/dashboard/setting/email', location)}/>\r\n        <FormButton typical='edit' permission=\"email.update\" as={Link} to={makeUrl(`/dashboard/setting/email/${emailId}/edit`, location)}/>\r\n      </HStack>\r\n      <ViewEmailForm />\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default DetailEmailPage;","import { cx } from \"@chakra-ui/shared-utils\"\nimport { forwardRef, HTMLChakraProps, chakra } from \"@chakra-ui/system\"\nimport { useCardStyles } from \"./card-context\"\n\nexport interface CardBodyProps extends HTMLChakraProps<\"div\"> {}\n\nexport const CardBody = forwardRef<CardBodyProps, \"div\">(function CardBody(\n  props,\n  ref,\n) {\n  const { className, ...rest } = props\n  const styles = useCardStyles()\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-card__body\", className)}\n      __css={styles.body}\n      {...rest}\n    />\n  )\n})\n","import { createStylesContext } from \"@chakra-ui/system\"\n\nexport const [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\")\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  forwardRef,\n  HTMLChakraProps,\n  ThemingProps,\n  chakra,\n  omitThemingProps,\n  useMultiStyleConfig,\n  SystemProps,\n} from \"@chakra-ui/system\"\nimport { CardStylesProvider } from \"./card-context\"\n\nexport type CardOptions = {\n  /**\n   * The flex direction of the card\n   */\n  direction?: SystemProps[\"flexDirection\"]\n  /**\n   * The flex alignment of the card\n   */\n  align?: SystemProps[\"alignItems\"]\n  /**\n   * The flex distribution of the card\n   */\n  justify?: SystemProps[\"justifyContent\"]\n}\n\nexport interface CardProps\n  extends HTMLChakraProps<\"div\">,\n    CardOptions,\n    ThemingProps<\"Card\"> {}\n\nexport const Card = forwardRef<CardProps, \"div\">(function Card(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props)\n\n  const styles = useMultiStyleConfig(\"Card\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-card\", className)}\n      __css={{\n        display: \"flex\",\n        flexDirection: direction,\n        justifyContent: justify,\n        alignItems: align,\n        position: \"relative\",\n        minWidth: 0,\n        wordWrap: \"break-word\",\n        ...styles.container,\n      }}\n      {...rest}\n    >\n      <CardStylesProvider value={styles}>{children}</CardStylesProvider>\n    </chakra.div>\n  )\n})\n"],"names":["props","form","defaultForm","useForm","emailType","setEmailType","useState","activedLanguage","useSelector","state","languageReducer","detail","emailReducer","useEffect","_detail$type","_detail$type2","title","setValue","content","value","type","label","jsonParse","typeName","_jsx","Card","w","children","CardBody","_jsxs","Stack","spacing","divider","StackDivider","TextInput","typical","isDisabled","bg","EmailType","onChange","dispatch","useDispatch","location","useLocation","emailId","useParams","actions","GET_DETAIL_ASYNC","HStack","pb","FormButton","permission","as","Link","to","makeUrl","ViewEmailForm","forwardRef","ref","className","rest","styles","useCardStyles","jsx","chakra","div","cx","__css","body","CardStylesProvider","createStylesContext","direction","justify","align","omitThemingProps","useMultiStyleConfig","display","flexDirection","justifyContent","alignItems","position","minWidth","wordWrap","container"],"sourceRoot":""}