{"version":3,"file":"static/js/5355.f0d7b0bb.chunk.js","mappings":"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","sources":["modules/buttons/CustomIconButton.tsx","modules/forms/FloatTextInput.tsx","modules/others/MultiLanguageTabs.tsx","modules/others/Pagination.tsx","modules/scss/index.tsx","modules/table/DataTable.tsx","modules/table/DataAccordion.tsx","modules/table/ResponsiveTable.tsx","components/dashboard/announce/news/forms/SearchForm.tsx","components/dashboard/announce/news/tables/Define.tsx","components/dashboard/announce/news/tables/List.tsx","pages/dashboard/announce/news/index.tsx","../node_modules/@chakra-ui/avatar/src/avatar-context.tsx","../node_modules/@chakra-ui/avatar/src/avatar-name.tsx","../node_modules/@chakra-ui/avatar/src/generic-avatar-icon.tsx","../node_modules/@chakra-ui/avatar/src/avatar-image.tsx","../node_modules/@chakra-ui/avatar/src/avatar.tsx","../node_modules/@chakra-ui/image/src/use-image.ts","../node_modules/@chakra-ui/layout/src/badge.tsx","../node_modules/@chakra-ui/tabs/src/tab-panels.tsx","../node_modules/@chakra-ui/tabs/src/tab-list.tsx","../node_modules/@chakra-ui/tabs/src/tabs.tsx","../node_modules/@chakra-ui/tabs/src/tab.tsx","../node_modules/@chakra-ui/tabs/src/tab-panel.tsx","../node_modules/@chakra-ui/clickable/src/use-clickable.ts","../node_modules/@chakra-ui/clickable/src/use-event-listeners.ts","../node_modules/@chakra-ui/tabs/src/use-tabs.ts"],"sourcesContent":["import { IconButton } from \"@chakra-ui/react\"\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst CustomIconButton = (props: any) => {\r\n  const { permission, ...others } = props;\r\n  const { permission: permissionReducer } = useSelector((state: any) => state.authenticationReducer); \r\n  if (permission) {\r\n    const permissionArr = permission.split('.')\r\n    if (permissionReducer \r\n      && permissionReducer[permissionArr[0]] \r\n      && permissionReducer[permissionArr[0]].includes(permissionArr[1])\r\n    ) {\r\n      return <IconButton {...others} />\r\n    }\r\n    return <></>\r\n  }\r\n  return <IconButton {...others} />\r\n}\r\n\r\nexport default CustomIconButton","import { InputGroup, InputLeftElement, Icon, Input, InputRightElement, Text, FormControl, Stack, FormLabel } from \"@chakra-ui/react\"\r\nimport { inputSetting } from \"modules/forms/config\";\r\nimport { t } from \"commons/languages/helper\";\r\nimport { MdOutlineCheck } from \"react-icons/md\"\r\nimport { useState } from \"react\";\r\n\r\nconst FloatTextInput = (props: any) => {\r\n  const { typical,  errors, register, getValues, handleSubmit, setValue, trigger, ...otherProps } = props;\r\n\r\n  return (\r\n    <FormControl \r\n      variant=\"floating\"\r\n      id={inputSetting[typical].name} \r\n      isInvalid={true}\r\n      // maxW=\"xs\"\r\n    >\r\n      <InputGroup >\r\n        { \r\n          inputSetting[typical].icon ? \r\n          <InputLeftElement pointerEvents=\"none\">\r\n            <Icon as={inputSetting[typical].icon} color=\"fg.muted\" boxSize=\"4\" />\r\n          </InputLeftElement> \r\n          : <></>\r\n        }       \r\n        <Input\r\n          isInvalid={errors.hasOwnProperty(inputSetting[typical].name)}\r\n          errorBorderColor='red.300'\r\n          type={inputSetting[typical].name !== 'password' ? 'text' : 'password'}\r\n          {...register(inputSetting[typical].name, inputSetting[typical].rules)} \r\n          placeholder={''} \r\n          {...otherProps}\r\n        />\r\n        {\r\n          inputSetting[typical].rules && inputSetting[typical].rules.hasOwnProperty('required') && inputSetting[typical].rules.required ? \r\n          <FormLabel>\r\n            {t(inputSetting[typical].placeholder)}&nbsp;<span style={{color: 'red'}}>*</span>\r\n          </FormLabel> :\r\n          <FormLabel>{t(inputSetting[typical].placeholder)}</FormLabel>\r\n        }\r\n        {\r\n          !errors.hasOwnProperty(inputSetting[typical].name) &&\r\n          getValues(inputSetting[typical].name) != '' &&\r\n          <InputRightElement>\r\n            <Icon as={MdOutlineCheck} color=\"green.500\" boxSize=\"5\" />\r\n          </InputRightElement>\r\n        }\r\n      </InputGroup>\r\n      {\r\n        errors.hasOwnProperty(inputSetting[typical].name) &&\r\n        <Stack pt=\"1\">\r\n          <Text color='tomato' fontSize='10px'>\r\n            <i>{t(`error.${errors[inputSetting[typical].name].type}`)}</i>\r\n          </Text>\r\n        </Stack>\r\n      }\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default FloatTextInput","import { useState } from \"react\"\nimport { Tabs, TabList, Tab, TabPanels, TabPanel } from \"@chakra-ui/react\"\nimport { supportLanguages, SupportLanguageTypes } from \"commons/config\"\nimport { t } from \"commons/languages/helper\"\n\nconst MultiLanguageTabs = (props: any) => {\n  const { renderPanel } = props;\n  const languageKeys = Object.keys(supportLanguages).filter((f: any) => f !== '/').sort()\n  const [ lang, setLang ] = useState<any>(languageKeys[0]);\n\n  return (\n    <Tabs isLazy variant='soft-rounded' colorScheme='green'>\n      <TabList>\n        {\n          languageKeys.map((k: any, idx: number) => (\n              <Tab key={idx} onClick={() => setLang(k)}>\n                {t(supportLanguages[k as keyof SupportLanguageTypes]?.name)}\n              </Tab>\n            ))\n        }\n      </TabList>\n      <TabPanels>\n        {\n          languageKeys\n            .map((f: any, idx: number) => (\n              <TabPanel key={idx}>\n                {renderPanel(lang)}\n              </TabPanel>\n            ))\n        }\n      </TabPanels>\n    </Tabs>\n  )\n}\n\nexport default MultiLanguageTabs","import { ButtonGroup, Button, IconButton } from \"@chakra-ui/react\";\r\nimport { FIRST_PAGE, PAGE_SIZE } from \"commons/config\";\r\nimport { useState } from \"react\";\r\nimport { MdOutlineNavigateBefore, MdOutlineNavigateNext } from \"react-icons/md\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { createQuery, usePath } from \"utils/link\";\r\n\r\nexport const PaginationButton = (props: any) => {\r\n  const { total = 0 } = props;\r\n  const [ current, setCurrent ] = useState<any>(0);\r\n  const { params } = usePath();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { page = FIRST_PAGE, size = PAGE_SIZE } = params;\r\n\r\n  const gotoPage = (page: number) => {\r\n    navigate(`${location.pathname}?${createQuery({ ...params, page, size })}`)\r\n  }\r\n\r\n  const pageButton = (index: any) => (\r\n    <Button\r\n      key={index}\r\n      variant={index + 1 === parseInt(page) ? \"primary\" : \"secondary\"}\r\n      onClick={() => {\r\n        if (index + 1 >= (current + 1) * 5 && current + 1 < Math.ceil(Math.ceil(total/size)/5)) {\r\n          setCurrent(current + 1)\r\n        }\r\n        gotoPage(index + 1)\r\n      }}\r\n    >\r\n      {index + 1}\r\n    </Button>\r\n  );\r\n\r\n  const beforePagination = () => {\r\n    if (current > 0) {\r\n      setCurrent(current - 1)\r\n    }\r\n  }\r\n  const nextPagination = () => {\r\n    if (current + 1 < Math.ceil(Math.ceil(total/size)/5)) {\r\n      setCurrent(current + 1)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ButtonGroup\r\n      spacing=\"3\"\r\n      justifyContent=\"space-center\"\r\n      width={{ base: \"full\", md: \"auto\" }}\r\n    >\r\n      <IconButton variant=\"secondary\" aria-label=\"Before pagination\" onClick={beforePagination}>\r\n        <MdOutlineNavigateBefore />\r\n      </IconButton>\r\n      {Array.from(Array(Math.ceil(total/size)).keys()).splice(current * 5, 5).map(pageButton)}\r\n      <IconButton variant=\"secondary\" aria-label=\"Next pagination\" onClick={nextPagination}>\r\n        <MdOutlineNavigateNext />\r\n      </IconButton>\r\n    </ButtonGroup>\r\n  );\r\n};\r\nexport default PaginationButton;","export const overFlowText = {\r\n  width: '100px',\r\n  whiteSpace: 'nowrap',\r\n  overflow: 'hidden',\r\n  textOverflow: 'ellipsis' /* This is where the magic happens. */\r\n};","import * as React from \"react\";\nimport { Table, Thead, Tbody, Tr, Th, Td, chakra, TableContainer } from \"@chakra-ui/react\";\nimport { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\nimport {\n  useReactTable,\n  flexRender,\n  getCoreRowModel,\n  ColumnDef,\n  SortingState,\n  getSortedRowModel\n} from \"@tanstack/react-table\";\n\nexport type DataTableProps<Data extends object> = {\n  data: Data[];\n  columns: ColumnDef<Data, any>[];\n};\n\nexport function DataTable<Data extends object>({\n  data,\n  columns\n}: DataTableProps<Data>) {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const table = useReactTable({\n    columns,\n    data,\n    getCoreRowModel: getCoreRowModel(),\n    onSortingChange: setSorting,\n    getSortedRowModel: getSortedRowModel(),\n    state: {\n      sorting\n    }\n  });\n\n  return (\n    <TableContainer className=\"custom-table\">\n    <Table >\n      <Thead>\n        {table.getHeaderGroups().map((headerGroup) => (\n          <Tr key={headerGroup.id}>\n            {headerGroup.headers.map((header) => {\n              // see https://tanstack.com/table/v8/docs/api/core/column-def#meta to type this correctly\n              const meta: any = header.column.columnDef.meta;\n              return (\n                <Th\n                  key={header.id}\n                  // onClick={header.id !== '' ? header.column.getToggleSortingHandler() : undefined}\n                  onClick={header.column.getToggleSortingHandler()}\n                  isNumeric={meta?.isNumeric}\n                  className={header.id === \"selected\" ? \"checkbox-select\" : \"\"}\n                >\n                  {flexRender(\n                    header.column.columnDef.header,\n                    header.getContext()\n                  )}\n\n                  <chakra.span pl=\"4\">\n                    {header.column.getIsSorted() ? (\n                      header.column.getIsSorted() === \"desc\" ? (\n                        <TriangleDownIcon aria-label=\"sorted descending\" />\n                      ) : (\n                        <TriangleUpIcon aria-label=\"sorted ascending\" />\n                      )\n                    ) : null}\n                  </chakra.span>\n                </Th>\n              );\n            })}\n          </Tr>\n        ))}\n      </Thead>\n      <Tbody>\n        {table.getRowModel().rows.map((row) => (\n          <Tr key={row.id}>\n            {row.getVisibleCells().map((cell) => {\n              // see https://tanstack.com/table/v8/docs/api/core/column-def#meta to type this correctly\n              const meta: any = cell.column.columnDef.meta;\n              return (\n                <Td key={cell.id} isNumeric={meta?.isNumeric}>\n                  {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                </Td>\n              );\n            })}\n          </Tr>\n        ))}\n      </Tbody>\n    </Table></TableContainer>\n  );\n}\n\nexport default DataTable","import React from \"react\";\r\nimport { \r\n  Accordion, AccordionItem, AccordionButton, AccordionIcon, AccordionPanel, \r\n  Box, Divider, Flex, Checkbox, HStack ,\r\n} from \"@chakra-ui/react\";\r\nimport { useReactTable, getCoreRowModel, getSortedRowModel, SortingState, flexRender } from \"@tanstack/react-table\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst DataAccordion = (props: any) => {\r\n  const [sorting, setSorting] = React.useState<SortingState>([]);\r\n  const { data, columns, permissionGroup, onSelect } = props;\r\n  const { permission } = useSelector((state: any) => state.authenticationReducer); \r\n\r\n  const table = useReactTable({\r\n    columns,\r\n    data,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    onSortingChange: setSorting,\r\n    getSortedRowModel: getSortedRowModel(),\r\n    state: {\r\n      sorting\r\n    }\r\n  });\r\n  const rows = table.getRowModel().rows\r\n\r\n  return (\r\n    <Accordion allowMultiple>\r\n      {\r\n        data.map((d: any, idx: number) => {\r\n          const row: any = rows.find((row) => row.original === d)\r\n          const cell = row.getVisibleCells().find((c: any) => c.column.id == columns.filter((c: any) => c.accessorKey !== 'selected')[0].accessorKey)\r\n          \r\n          return (\r\n            <AccordionItem key={idx}>\r\n              <h2>\r\n                <AccordionButton>\r\n                  {\r\n                    typeof onSelect === \"function\" \r\n                    && permission \r\n                    && permissionGroup\r\n                    && permission[permissionGroup] \r\n                    && Array.isArray(permission[permissionGroup])\r\n                    && permission[permissionGroup].includes('update')\r\n                    ? (\r\n                      <Box as='span' flex='1' textAlign='left' onClick={(e: any) => e.stopPropagation()}>\r\n                        <HStack spacing=\"3\">\r\n                          <Checkbox onChange={(e: any) => {\r\n                            onSelect({\r\n                              id: d.id ? d.id : idx.toString(),\r\n                              value: e.target.checked\r\n                            })}}/>\r\n                          {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                        </HStack>\r\n                      </Box>\r\n                    ) : \r\n                    (flexRender(cell.column.columnDef.cell, cell.getContext()))\r\n                  }\r\n                  <AccordionIcon />\r\n                </AccordionButton>\r\n              </h2>\r\n              <AccordionPanel pb={4}>\r\n                {\r\n                  columns.filter((c: any) => c.accessorKey !== 'selected').map((column: any) => {\r\n                    const cell = row.getVisibleCells().find((c: any) => c.column.id == column.accessorKey)\r\n                    return (\r\n                      <React.Fragment key={`${idx}_${column.accessorKey}`}>\r\n                        <Flex my=\"5\">\r\n                          <Box flex='1'>\r\n                            {column.header}\r\n                          </Box>\r\n                          <Box flex='1'>\r\n                            {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                          </Box>\r\n                        </Flex>\r\n                        <Divider/>\r\n                      </React.Fragment>\r\n                    )\r\n                  })\r\n                }\r\n              </AccordionPanel>\r\n            </AccordionItem>\r\n          )\r\n        })\r\n      }\r\n    </Accordion>\r\n  )\r\n}\r\n\r\nexport default DataAccordion\r\n","import { Checkbox, useBreakpointValue } from \"@chakra-ui/react\";\r\nimport { createColumnHelper } from '@tanstack/react-table';\r\nimport DataTable from \"modules/table/DataTable\";\r\nimport DataAccordion from \"modules/table/DataAccordion\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst columnHelper = createColumnHelper<any>();\r\n\r\nconst ResponsiveTable = (props: any) => {\r\n  const isMobile = useBreakpointValue({ base: true, md: false })\r\n  const { data, columns, permissionGroup, onSelect } = props;\r\n  const { permission } = useSelector((state: any) => state.authenticationReducer); \r\n\r\n  return isMobile ? \r\n    <DataAccordion {...props}/> : \r\n    typeof onSelect === \"function\" \r\n    && permission \r\n    && permissionGroup\r\n    && permission[permissionGroup] \r\n    && Array.isArray(permission[permissionGroup])\r\n    && permission[permissionGroup].includes('update')\r\n    ? (\r\n      <DataTable data={data} columns={[\r\n        columnHelper.accessor(\"selected\", {\r\n          cell: (info) => <Checkbox onChange={(e: any) => {\r\n            onSelect({\r\n              id: info.row.original.id ? info.row.original.id : info.row.id,\r\n              value: e.target.checked\r\n            })}}/>,\r\n          header: '',\r\n          // header: () => <Checkbox onChange={(e: any) => {\r\n          //   onSelect({\r\n          //     id: 'info.row.original.id ? info.row.original.id : info.row.id',\r\n          //     value: e.target.checked\r\n          //   })}}/>,\r\n        }),\r\n        ...columns\r\n      ]} />\r\n    ) :\r\n    <DataTable data={data} columns={columns} />\r\n}\r\n  \r\nexport default ResponsiveTable","import { Stack } from \"@chakra-ui/react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useEffect } from \"react\";\r\nimport { createQuery, usePath } from \"utils/link\";\r\nimport { defaultForm } from \"utils/form\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport FloatTextInput from \"modules/forms/FloatTextInput\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actions } from \"commons/drawers/slice\";\r\nimport { ADD_NEWS_DRAWER } from \"components/dashboard/announce/news/popups/AddDrawer\";\r\nimport { FormButton } from \"modules/buttons/FormButton\";\r\n\r\nexport const SearchNewsForm = (props: any) => {\r\n  const { params } = usePath();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const defaultFilter = {...{ search: null }, ...params};\r\n  const form = defaultForm(useForm);\r\n  \r\n  useEffect(() => {\r\n    form.setValue('search', defaultFilter.search);\r\n  }, []);\r\n\r\n  const searchNews = (data: any) => {\r\n    navigate(`${location.pathname}?${createQuery({ ...params, ...data })}`);\r\n  }\r\n  \r\n  const addNewsHandler = () => {\r\n    dispatch(actions.OPEN_DRAWER({ type: ADD_NEWS_DRAWER, size: 'xl', data: {} }));\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={form?.handleSubmit(searchNews)}>\r\n      <Stack spacing={5} direction={{ base: 'column', md: 'row' }}>\r\n        <Stack maxW={'sm'} >\r\n          <FloatTextInput {...form} typical='search' />\r\n        </Stack>\r\n        <FormButton typical=\"add\" permission=\"news.create\" onClick={addNewsHandler} />\r\n        <FormButton type=\"submit\" permission=\"news.view\" typical=\"search\"/>\r\n      </Stack>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SearchNewsForm","import { HStack, Badge, Text, Avatar, Box } from \"@chakra-ui/react\";\r\nimport { createColumnHelper } from \"@tanstack/react-table\";\r\nimport { colors } from \"commons/config\";\r\nimport CustomIconButton from \"modules/buttons/CustomIconButton\";\r\nimport { overFlowText } from \"modules/scss\";\r\nimport { FiEdit2, FiTrash2 } from \"react-icons/fi\";\r\nimport { HiOutlineEye } from \"react-icons/hi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { jsonParse } from \"utils/json\";\r\nimport { makeUrl } from \"utils/link\";\r\n\r\nconst columnHelper = createColumnHelper<any>();\r\n\r\nexport const getColumns = (props: any) => {\r\n  const { t, location, lang, deleteNewsHandler } = props;\r\n\r\n  return [\r\n    columnHelper.accessor(\"title\", {\r\n      cell: (info) => (\r\n        <HStack spacing=\"3\">\r\n          <Avatar name={info.row.original.title} src={info.row.original.image?.url} boxSize=\"10\" />\r\n          <Box>\r\n            <Text style={overFlowText}>{jsonParse(info.getValue())[lang]}</Text>\r\n          </Box>\r\n        </HStack>\r\n      ),\r\n      header: t('table.news.title')\r\n    }),\r\n    columnHelper.accessor(\"content\", {\r\n      cell: (info) => <Text style={overFlowText}>{jsonParse(info.getValue())[lang]}</Text>,\r\n      header:  t('table.news.content')\r\n    }),\r\n    columnHelper.accessor(\"newsCategory\", {\r\n      cell: (info) => <Badge size=\"sm\">{jsonParse(info.getValue()?.typeName)[lang]}</Badge>,\r\n      header: t('table.category')\r\n    }),\r\n    columnHelper.accessor(\"newsTags\", {\r\n      cell: (info) => info.getValue().map(\r\n        (v: any, idx: number) => <Badge size=\"sm\" mr={1} colorScheme={colors[idx]} key={idx}>{jsonParse(v.typeName)[lang]}</Badge>\r\n      ),\r\n      header: t('table.tags')\r\n    }),\r\n    columnHelper.accessor(\"slug\", {\r\n      cell: (info) => (\r\n        <HStack spacing=\"1\">\r\n          <CustomIconButton \r\n            icon={<HiOutlineEye />} \r\n            variant=\"tertiary\" \r\n            permission=\"news.view\"\r\n            aria-label=\"View news\" \r\n            as={Link}\r\n            to={makeUrl(`/dashboard/announce/${info.getValue()}`, location)}\r\n          />\r\n          <CustomIconButton \r\n            icon={<FiEdit2 />} \r\n            variant=\"tertiary\" \r\n            permission=\"news.update\"\r\n            aria-label=\"Edit news\" \r\n            as={Link}\r\n            to={makeUrl(`/dashboard/announce/${info.getValue()}/edit`, location)}\r\n          />\r\n          <CustomIconButton \r\n            icon={<FiTrash2 />} \r\n            variant=\"tertiary\" \r\n            permission=\"news.delete\"\r\n            aria-label=\"Delete news\" \r\n            onClick={() => deleteNewsHandler(info.row.original.id)}\r\n          />\r\n        </HStack>\r\n      ),\r\n      header: t('table.action'),\r\n    })\r\n  ];\r\n}","import ResponsiveTable from 'modules/table/ResponsiveTable'\r\nimport { getColumns } from 'components/dashboard/announce/news/tables/Define';\r\nimport { t } from 'commons/languages/helper';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { actions } from 'components/dashboard/announce/news/slice';\r\nimport { actions as modalActions} from 'commons/modals/slice';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { DELETE_CONFIRMATION_MODAL } from 'commons/modals/components/DeleteConfirmationModal';\r\nimport { usePath } from 'utils/link';\r\n\r\nconst NewsList = (props: any) => {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const { lang } = props; \r\n  const { activedLanguage } = useSelector((state: any) => state.languageReducer); \r\n  const { list } = useSelector((state: any) => state.newsReducer);\r\n  const { params } = usePath();\r\n\r\n  const deleteNewsHandler = useCallback((id: any) => {\r\n    const executeAndClose = () => {\r\n      dispatch(actions.DELETE_ASYNC({id, params}))\r\n      dispatch(modalActions.CLOSE_MODAL(DELETE_CONFIRMATION_MODAL))\r\n    }\r\n\r\n    dispatch(modalActions.OPEN_MODAL({ \r\n      type: DELETE_CONFIRMATION_MODAL, \r\n      data: { next: executeAndClose } \r\n    }))\r\n  }, []);\r\n\r\n  return useMemo(() => \r\n    <ResponsiveTable \r\n      data={list || []} \r\n      columns={getColumns({t, deleteNewsHandler, location, lang, activedLanguage})} \r\n    />\r\n  , [list, lang])\r\n}\r\n\r\nexport default NewsList","import { Box, Stack } from '@chakra-ui/react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { actions } from 'components/dashboard/announce/news/slice';\r\nimport { useEffect } from 'react';\r\nimport { usePath } from 'utils/link';\r\nimport SearchNewsForm from 'components/dashboard/announce/news/forms/SearchForm';\r\nimport Pagination from 'modules/others/Pagination'\r\nimport NewsList from 'components/dashboard/announce/news/tables/List';\r\nimport MultiLanguageTabs from 'modules/others/MultiLanguageTabs';\r\n\r\nexport const AnnouncePage = () => {\r\n  const { total } = useSelector((state: any) => state.newsReducer); \r\n  const dispatch = useDispatch();\r\n  const { params, fullPath } = usePath();\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.GET_LIST_ASYNC(params));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.GET_LIST_ASYNC(params));\r\n  }, [fullPath]);\r\n  \r\n  return (\r\n    <Stack\r\n      spacing={{ base: '8', lg: '6' }}\r\n      bg=\"bg.surface\"\r\n      boxShadow={{ base: 'none', md: 'sm' }}\r\n      borderRadius={{ base: 'none', md: 'lg' }}\r\n      width={{base: \"full\", md: \"full\", sm: \"sm\"}}\r\n    >\r\n      <Stack spacing=\"5\">\r\n        <Box px={{ base: '4', md: '6' }} pt=\"5\">\r\n          <SearchNewsForm/>\r\n        </Box>\r\n        <Box px={{ base: '4', md: '6' }} overflowX=\"scroll\">\r\n          <MultiLanguageTabs renderPanel={(lang: string) => <NewsList lang={lang}/>} />\r\n        </Box>\r\n        <Box px={{ base: '4', md: '6' }} pb=\"5\">\r\n          <Stack alignItems='center'>\r\n            <Pagination total={total}/>\r\n          </Stack>\r\n        </Box>\r\n      </Stack>\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default AnnouncePage;","import { createContext } from \"@chakra-ui/react-context\"\nimport { SystemStyleObject } from \"@chakra-ui/system\"\n\nexport const [AvatarStylesProvider, useAvatarStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `AvatarStylesContext`,\n  hookName: `useAvatarStyles`,\n  providerName: \"<Avatar/>\",\n})\n","import { chakra, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { useAvatarStyles } from \"./avatar-context\"\nimport { AvatarOptions } from \"./avatar-types\"\n\nexport function initials(name: string) {\n  const names = name.split(\" \")\n  const firstName = names[0] ?? \"\"\n  const lastName = names.length > 1 ? names[names.length - 1] : \"\"\n  return firstName && lastName\n    ? `${firstName.charAt(0)}${lastName.charAt(0)}`\n    : firstName.charAt(0)\n}\n\ninterface AvatarNameProps\n  extends HTMLChakraProps<\"div\">,\n    Pick<AvatarOptions, \"name\" | \"getInitials\"> {}\n/**\n * The avatar name container\n */\n\nexport function AvatarName(props: AvatarNameProps) {\n  const { name, getInitials, ...rest } = props\n  const styles = useAvatarStyles()\n\n  return (\n    <chakra.div role=\"img\" aria-label={name} {...rest} __css={styles.label}>\n      {name ? getInitials?.(name) : null}\n    </chakra.div>\n  )\n}\n\nAvatarName.displayName = \"AvatarName\"\n","import { chakra, ChakraComponent } from \"@chakra-ui/system\"\n\n/**\n * Fallback avatar react component.\n * This should be a generic svg used to represent an avatar\n */\nexport const GenericAvatarIcon: ChakraComponent<\"svg\"> = (props) => (\n  <chakra.svg\n    viewBox=\"0 0 128 128\"\n    color=\"#fff\"\n    width=\"100%\"\n    height=\"100%\"\n    className=\"chakra-avatar__svg\"\n    {...props}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z\"\n    />\n    <path\n      fill=\"currentColor\"\n      d=\"M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24\"\n    />\n  </chakra.svg>\n)\n","import { ImageProps, useImage } from \"@chakra-ui/image\"\nimport { chakra, SystemStyleObject } from \"@chakra-ui/system\"\nimport { cloneElement } from \"react\"\nimport { AvatarName } from \"./avatar-name\"\nimport { GenericAvatarIcon } from \"./generic-avatar-icon\"\n\ntype AvatarImageProps = ImageProps & {\n  getInitials?: (name: string) => string\n  borderRadius?: SystemStyleObject[\"borderRadius\"]\n  icon: React.ReactElement\n  iconLabel?: string\n  name?: string\n}\n\nexport function AvatarImage(props: AvatarImageProps) {\n  const {\n    src,\n    srcSet,\n    onError,\n    onLoad,\n    getInitials,\n    name,\n    borderRadius,\n    loading,\n    iconLabel,\n    icon = <GenericAvatarIcon />,\n    ignoreFallback,\n    referrerPolicy,\n    crossOrigin,\n  } = props\n\n  /**\n   * use the image hook to only show the image when it has loaded\n   */\n  const status = useImage({ src, onError, crossOrigin, ignoreFallback })\n\n  const hasLoaded = status === \"loaded\"\n\n  /**\n   * Fallback avatar applies under 2 conditions:\n   * - If `src` was passed and the image has not loaded or failed to load\n   * - If `src` wasn't passed\n   *\n   * In this case, we'll show either the name avatar or default avatar\n   */\n  const showFallback = !src || !hasLoaded\n\n  if (showFallback) {\n    return name ? (\n      <AvatarName\n        className=\"chakra-avatar__initials\"\n        getInitials={getInitials}\n        name={name}\n      />\n    ) : (\n      cloneElement(icon, {\n        role: \"img\",\n        \"aria-label\": iconLabel,\n      })\n    )\n  }\n\n  /**\n   * If `src` was passed and the image has loaded, we'll show it\n   */\n  return (\n    <chakra.img\n      src={src}\n      srcSet={srcSet}\n      alt={name}\n      onLoad={onLoad}\n      referrerPolicy={referrerPolicy}\n      crossOrigin={crossOrigin ?? undefined}\n      className=\"chakra-avatar__img\"\n      loading={loading}\n      __css={{\n        width: \"100%\",\n        height: \"100%\",\n        objectFit: \"cover\",\n        borderRadius,\n      }}\n    />\n  )\n}\n\nAvatarImage.displayName = \"AvatarImage\"\n","import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { callAllHandlers, cx, dataAttr } from \"@chakra-ui/shared-utils\"\nimport { AvatarStylesProvider } from \"./avatar-context\"\nimport { AvatarImage } from \"./avatar-image\"\nimport { GenericAvatarIcon } from \"./generic-avatar-icon\"\nimport { initials } from \"./avatar-name\"\nimport { AvatarOptions } from \"./avatar-types\"\nimport { useState } from \"react\"\n\nexport const baseStyle: SystemStyleObject = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0,\n}\n\nexport interface AvatarProps\n  extends Omit<HTMLChakraProps<\"span\">, \"onError\">,\n    AvatarOptions,\n    ThemingProps<\"Avatar\"> {\n  crossOrigin?: HTMLChakraProps<\"img\">[\"crossOrigin\"]\n  iconLabel?: string\n  /**\n   * If `true`, opt out of the avatar's `fallback` logic and\n   * renders the `img` at all times.\n   *\n   * @default false\n   */\n  ignoreFallback?: boolean\n}\n\n/**\n * Avatar component that renders an user avatar with\n * support for fallback avatar and name-only avatars\n */\nexport const Avatar = forwardRef<AvatarProps, \"span\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Avatar\", props)\n  const [isLoaded, setIsLoaded] = useState(false)\n\n  const {\n    src,\n    srcSet,\n    name,\n    showBorder,\n    borderRadius = \"full\",\n    onError,\n    onLoad: onLoadProp,\n    getInitials = initials,\n    icon = <GenericAvatarIcon />,\n    iconLabel = \" avatar\",\n    loading,\n    children,\n    borderColor,\n    ignoreFallback,\n    crossOrigin,\n    referrerPolicy,\n    ...rest\n  } = omitThemingProps(props)\n\n  const avatarStyles: SystemStyleObject = {\n    borderRadius,\n    borderWidth: showBorder ? \"2px\" : undefined,\n    ...baseStyle,\n    ...styles.container,\n  }\n\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor\n  }\n\n  return (\n    <chakra.span\n      ref={ref}\n      {...rest}\n      className={cx(\"chakra-avatar\", props.className)}\n      data-loaded={dataAttr(isLoaded)}\n      __css={avatarStyles}\n    >\n      <AvatarStylesProvider value={styles}>\n        <AvatarImage\n          src={src}\n          srcSet={srcSet}\n          loading={loading}\n          onLoad={callAllHandlers(onLoadProp, () => {\n            setIsLoaded(true)\n          })}\n          onError={onError}\n          getInitials={getInitials}\n          name={name}\n          borderRadius={borderRadius}\n          icon={icon}\n          iconLabel={iconLabel}\n          ignoreFallback={ignoreFallback}\n          crossOrigin={crossOrigin}\n          referrerPolicy={referrerPolicy}\n        />\n        {children}\n      </AvatarStylesProvider>\n    </chakra.span>\n  )\n})\n\nAvatar.displayName = \"Avatar\"\n","import { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\n\ntype NativeImageProps = React.ImgHTMLAttributes<HTMLImageElement>\n\nexport interface UseImageProps {\n  /**\n   * The image `src` attribute\n   */\n  src?: string\n  /**\n   * The image `srcset` attribute\n   */\n  srcSet?: string\n  /**\n   * The image `sizes` attribute\n   */\n  sizes?: string\n  /**\n   * A callback for when the image `src` has been loaded\n   */\n  onLoad?: NativeImageProps[\"onLoad\"]\n  /**\n   * A callback for when there was an error loading the image `src`\n   */\n  onError?: NativeImageProps[\"onError\"]\n  /**\n   * If `true`, opt out of the `fallbackSrc` logic and use as `img`\n   *\n   * @default false\n   */\n  ignoreFallback?: boolean\n  /**\n   * The key used to set the crossOrigin on the HTMLImageElement into which the image will be loaded.\n   * This tells the browser to request cross-origin access when trying to download the image data.\n   */\n  crossOrigin?: NativeImageProps[\"crossOrigin\"]\n  loading?: NativeImageProps[\"loading\"]\n}\n\ntype Status = \"loading\" | \"failed\" | \"pending\" | \"loaded\"\n\nexport type FallbackStrategy = \"onError\" | \"beforeLoadOrError\"\n\ntype ImageEvent = React.SyntheticEvent<HTMLImageElement, Event>\n\n/**\n * React hook that loads an image in the browser,\n * and lets us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\nexport function useImage(props: UseImageProps) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback,\n  } = props\n\n  const [status, setStatus] = useState<Status>(\"pending\")\n\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\")\n  }, [src])\n\n  const imageRef = useRef<HTMLImageElement | null>()\n\n  const load = useCallback(() => {\n    if (!src) return\n\n    flush()\n\n    const img = new Image()\n    img.src = src\n    if (crossOrigin) img.crossOrigin = crossOrigin\n    if (srcSet) img.srcset = srcSet\n    if (sizes) img.sizes = sizes\n    if (loading) img.loading = loading\n\n    img.onload = (event) => {\n      flush()\n      setStatus(\"loaded\")\n      onLoad?.(event as unknown as ImageEvent)\n    }\n    img.onerror = (error) => {\n      flush()\n      setStatus(\"failed\")\n      onError?.(error as any)\n    }\n\n    imageRef.current = img\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading])\n\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null\n      imageRef.current.onerror = null\n      imageRef.current = null\n    }\n  }\n\n  useSafeLayoutEffect(() => {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined\n\n    if (status === \"loading\") {\n      load()\n    }\n    return () => {\n      flush()\n    }\n  }, [status, load, ignoreFallback])\n\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n  return ignoreFallback ? \"loaded\" : status\n}\n\nexport const shouldShowFallbackImage = (\n  status: Status,\n  fallbackStrategy: FallbackStrategy,\n) =>\n  (status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\") ||\n  (status === \"failed\" && fallbackStrategy === \"onError\")\n\nexport type UseImageReturn = ReturnType<typeof useImage>\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface BadgeProps\n  extends HTMLChakraProps<\"span\">,\n    ThemingProps<\"Badge\"> {}\n\n/**\n * React component used to display notifications, messages, or\n * statuses in different shapes and sizes.\n *\n * @see Docs https://chakra-ui.com/badge\n */\nexport const Badge = forwardRef<BadgeProps, \"span\">(function Badge(props, ref) {\n  const styles = useStyleConfig(\"Badge\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.span\n      ref={ref}\n      className={cx(\"chakra-badge\", props.className)}\n      {...rest}\n      __css={{\n        display: \"inline-block\",\n        whiteSpace: \"nowrap\",\n        verticalAlign: \"middle\",\n        ...styles,\n      }}\n    />\n  )\n})\n\nBadge.displayName = \"Badge\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\n\nimport { useTabsStyles } from \"./tabs\"\nimport { useTabPanels } from \"./use-tabs\"\n\nexport interface TabPanelsProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * TabPanel\n *\n * Used to manage the rendering of multiple tab panels. It uses\n * `cloneElement` to hide/show tab panels.\n *\n * It renders a `div` by default.\n */\nexport const TabPanels = forwardRef<TabPanelsProps, \"div\">(function TabPanels(\n  props,\n  ref,\n) {\n  const panelsProps = useTabPanels(props)\n  const styles = useTabsStyles()\n\n  return (\n    <chakra.div\n      {...panelsProps}\n      width=\"100%\"\n      ref={ref}\n      className={cx(\"chakra-tabs__tab-panels\", props.className)}\n      __css={styles.tabpanels}\n    />\n  )\n})\n\nTabPanels.displayName = \"TabPanels\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  SystemStyleObject,\n  chakra,\n  forwardRef,\n} from \"@chakra-ui/system\"\n\nimport { useTabsStyles } from \"./tabs\"\nimport { UseTabListProps, useTabList } from \"./use-tabs\"\n\nexport interface TabListProps\n  extends UseTabListProps,\n    Omit<HTMLChakraProps<\"div\">, \"onKeyDown\" | \"ref\"> {}\n\n/**\n * TabList is used to manage a list of tab buttons. It renders a `div` by default,\n * and is responsible the keyboard interaction between tabs.\n */\nexport const TabList = forwardRef<TabListProps, \"div\">(function TabList(\n  props,\n  ref,\n) {\n  const tablistProps = useTabList({ ...props, ref })\n\n  const styles = useTabsStyles()\n\n  const tablistStyles: SystemStyleObject = {\n    display: \"flex\",\n    ...styles.tablist,\n  }\n\n  return (\n    <chakra.div\n      {...tablistProps}\n      className={cx(\"chakra-tabs__tablist\", props.className)}\n      __css={tablistStyles}\n    />\n  )\n})\n\nTabList.displayName = \"TabList\"\n","import { createContext } from \"@chakra-ui/react-context\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useMemo } from \"react\"\nimport {\n  TabsDescendantsProvider,\n  TabsProvider,\n  useTabs,\n  UseTabsProps,\n} from \"./use-tabs\"\n\nconst [TabsStylesProvider, useTabsStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `TabsStylesContext`,\n  errorMessage: `useTabsStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tabs />\" `,\n})\n\nexport { useTabsStyles }\n\ninterface TabsOptions {\n  /**\n   * If `true`, tabs will stretch to width of the tablist.\n   * @default false\n   */\n  isFitted?: boolean\n  /**\n   * The alignment of the tabs\n   */\n  align?: \"start\" | \"end\" | \"center\"\n}\n\nexport interface TabsProps\n  extends UseTabsProps,\n    ThemingProps<\"Tabs\">,\n    Omit<HTMLChakraProps<\"div\">, \"onChange\">,\n    TabsOptions {\n  children: React.ReactNode\n}\n\n/**\n * Tabs\n *\n * Provides context and logic for all tabs components.\n *\n * @see Docs https://chakra-ui.com/docs/components/tabs\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/tabpanel/\n */\nexport const Tabs = forwardRef<TabsProps, \"div\">(function Tabs(props, ref) {\n  const styles = useMultiStyleConfig(\"Tabs\", props)\n  const { children, className, ...rest } = omitThemingProps(props)\n\n  const { htmlProps, descendants, ...ctx } = useTabs(rest)\n  const context = useMemo(() => ctx, [ctx])\n\n  const { isFitted: _, ...rootProps } = htmlProps as any\n\n  const tabsStyles: SystemStyleObject = {\n    position: \"relative\",\n    ...styles.root,\n  }\n\n  return (\n    <TabsDescendantsProvider value={descendants}>\n      <TabsProvider value={context}>\n        <TabsStylesProvider value={styles}>\n          <chakra.div\n            className={cx(\"chakra-tabs\", className)}\n            ref={ref}\n            {...rootProps}\n            __css={tabsStyles}\n          >\n            {children}\n          </chakra.div>\n        </TabsStylesProvider>\n      </TabsProvider>\n    </TabsDescendantsProvider>\n  )\n})\n\nTabs.displayName = \"Tabs\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  SystemStyleObject,\n  chakra,\n  forwardRef,\n} from \"@chakra-ui/system\"\n\nimport { useTabsStyles } from \"./tabs\"\nimport { UseTabOptions, useTab } from \"./use-tabs\"\n\nexport interface TabProps extends UseTabOptions, HTMLChakraProps<\"button\"> {}\n\n/**\n * Tab button used to activate a specific tab panel. It renders a `button`,\n * and is responsible for automatic and manual selection modes.\n */\nexport const Tab = forwardRef<TabProps, \"button\">(function Tab(props, ref) {\n  const styles = useTabsStyles()\n  const tabProps = useTab({ ...props, ref })\n\n  const tabStyles: SystemStyleObject = {\n    outline: \"0\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    ...styles.tab,\n  }\n\n  return (\n    <chakra.button\n      {...tabProps}\n      className={cx(\"chakra-tabs__tab\", props.className)}\n      __css={tabStyles}\n    />\n  )\n})\n\nTab.displayName = \"Tab\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\n\nimport { useTabsStyles } from \"./tabs\"\nimport { useTabPanel } from \"./use-tabs\"\n\nexport interface TabPanelProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * TabPanel\n * Used to render the content for a specific tab.\n */\nexport const TabPanel = forwardRef<TabPanelProps, \"div\">(function TabPanel(\n  props,\n  ref,\n) {\n  const panelProps = useTabPanel({ ...props, ref })\n  const styles = useTabsStyles()\n\n  return (\n    <chakra.div\n      outline=\"0\"\n      {...panelProps}\n      className={cx(\"chakra-tabs__tab-panel\", props.className)}\n      __css={styles.tabpanel}\n    />\n  )\n})\n\nTabPanel.displayName = \"TabPanel\"\n","import { dataAttr } from \"@chakra-ui/shared-utils\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { useEventListeners } from \"./use-event-listeners\"\nimport { useCallback, useState } from \"react\"\n\nexport interface UseClickableProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * If `true`, the element will be disabled.\n   * It will set the `disabled` HTML attribute\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and isDisabled, the element will\n   * have only `aria-disabled` set to `true`\n   *\n   * @default false\n   */\n  isFocusable?: boolean\n  /**\n   * Whether or not trigger click on pressing `Enter`.\n   *\n   * @default true\n   */\n  clickOnEnter?: boolean\n  /**\n   * Whether or not trigger click on pressing `Space`.\n   *\n   * @default true\n   */\n  clickOnSpace?: boolean\n  /**\n   * The ref for the element\n   */\n  ref?: React.Ref<HTMLElement>\n}\n\nfunction isValidElement(event: KeyboardEvent): boolean {\n  const element = event.target as HTMLElement\n  const { tagName, isContentEditable } = element\n  return (\n    tagName !== \"INPUT\" && tagName !== \"TEXTAREA\" && isContentEditable !== true\n  )\n}\n\n/**\n * useClickable implements all the interactions of a native `button`\n * component with support for making it focusable even if it is disabled.\n *\n * It can be used with both native button elements or other elements (like `div`).\n */\nexport function useClickable(props: UseClickableProps = {}) {\n  const {\n    ref: htmlRef,\n    isDisabled,\n    isFocusable,\n    clickOnEnter = true,\n    clickOnSpace = true,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onKeyDown,\n    onKeyUp,\n    tabIndex: tabIndexProp,\n    onMouseOver,\n    onMouseLeave,\n    ...htmlProps\n  } = props\n  /**\n   * We'll use this to track if the element is a button element\n   */\n  const [isButton, setIsButton] = useState(true)\n\n  /**\n   * For custom button implementation, we'll use this to track when\n   * we mouse down on the button, to enable use style its \":active\" style\n   */\n  const [isPressed, setIsPressed] = useState(false)\n\n  const listeners = useEventListeners()\n\n  /**\n   * The ref callback that fires as soon as the dom node is ready\n   */\n  const refCallback = (node: any) => {\n    if (!node) return\n    if (node.tagName !== \"BUTTON\") {\n      setIsButton(false)\n    }\n  }\n\n  const tabIndex = isButton ? tabIndexProp : tabIndexProp || 0\n  const trulyDisabled = isDisabled && !isFocusable\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isDisabled) {\n        event.stopPropagation()\n        event.preventDefault()\n        return\n      }\n\n      const self = event.currentTarget as HTMLElement\n      self.focus()\n      onClick?.(event)\n    },\n    [isDisabled, onClick],\n  )\n\n  const onDocumentKeyUp = useCallback(\n    (e: KeyboardEvent) => {\n      if (isPressed && isValidElement(e)) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        setIsPressed(false)\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        listeners.remove(document, \"keyup\", onDocumentKeyUp, false)\n      }\n    },\n    [isPressed, listeners],\n  )\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLElement>) => {\n      onKeyDown?.(event)\n\n      if (isDisabled || event.defaultPrevented || event.metaKey) {\n        return\n      }\n\n      if (!isValidElement(event.nativeEvent) || isButton) return\n\n      const shouldClickOnEnter = clickOnEnter && event.key === \"Enter\"\n      const shouldClickOnSpace = clickOnSpace && event.key === \" \"\n\n      if (shouldClickOnSpace) {\n        event.preventDefault()\n        setIsPressed(true)\n      }\n\n      if (shouldClickOnEnter) {\n        event.preventDefault()\n        const self = event.currentTarget as HTMLElement\n        self.click()\n      }\n\n      listeners.add(document, \"keyup\", onDocumentKeyUp, false)\n    },\n    [\n      isDisabled,\n      isButton,\n      onKeyDown,\n      clickOnEnter,\n      clickOnSpace,\n      listeners,\n      onDocumentKeyUp,\n    ],\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLElement>) => {\n      onKeyUp?.(event)\n\n      if (isDisabled || event.defaultPrevented || event.metaKey) return\n\n      if (!isValidElement(event.nativeEvent) || isButton) return\n\n      const shouldClickOnSpace = clickOnSpace && event.key === \" \"\n\n      if (shouldClickOnSpace) {\n        event.preventDefault()\n        setIsPressed(false)\n\n        const self = event.currentTarget as HTMLElement\n        self.click()\n      }\n    },\n    [clickOnSpace, isButton, isDisabled, onKeyUp],\n  )\n\n  const onDocumentMouseUp = useCallback(\n    (event: MouseEvent) => {\n      if (event.button !== 0) return\n      setIsPressed(false)\n      listeners.remove(document, \"mouseup\", onDocumentMouseUp, false)\n    },\n    [listeners],\n  )\n\n  const handleMouseDown = useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (event.button !== 0) return\n\n      if (isDisabled) {\n        event.stopPropagation()\n        event.preventDefault()\n        return\n      }\n\n      if (!isButton) {\n        setIsPressed(true)\n      }\n\n      const target = event.currentTarget as HTMLElement\n      target.focus({ preventScroll: true })\n\n      listeners.add(document, \"mouseup\", onDocumentMouseUp, false)\n\n      onMouseDown?.(event)\n    },\n    [isDisabled, isButton, onMouseDown, listeners, onDocumentMouseUp],\n  )\n\n  const handleMouseUp = useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (event.button !== 0) return\n\n      if (!isButton) {\n        setIsPressed(false)\n      }\n\n      onMouseUp?.(event)\n    },\n    [onMouseUp, isButton],\n  )\n\n  const handleMouseOver = useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isDisabled) {\n        event.preventDefault()\n        return\n      }\n\n      onMouseOver?.(event)\n    },\n    [isDisabled, onMouseOver],\n  )\n\n  const handleMouseLeave = useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isPressed) {\n        event.preventDefault()\n        setIsPressed(false)\n      }\n      onMouseLeave?.(event)\n    },\n    [isPressed, onMouseLeave],\n  )\n\n  const ref = mergeRefs(htmlRef, refCallback)\n\n  if (isButton) {\n    return {\n      ...htmlProps,\n      ref,\n      type: \"button\" as React.ButtonHTMLAttributes<any>[\"type\"],\n      \"aria-disabled\": trulyDisabled ? undefined : isDisabled,\n      disabled: trulyDisabled,\n      onClick: handleClick,\n      onMouseDown,\n      onMouseUp,\n      onKeyUp,\n      onKeyDown,\n      onMouseOver,\n      onMouseLeave,\n    }\n  }\n\n  return {\n    ...htmlProps,\n    ref,\n    role: \"button\",\n    \"data-active\": dataAttr(isPressed),\n    \"aria-disabled\": isDisabled ? (\"true\" as const) : undefined,\n    tabIndex: trulyDisabled ? undefined : tabIndex,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    onMouseUp: handleMouseUp,\n    onKeyUp: handleKeyUp,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseLeave: handleMouseLeave,\n  }\n}\n\nexport type UseClickableReturn = ReturnType<typeof useClickable>\n","import { useCallback, useEffect, useRef } from \"react\"\n\ninterface EventListeners {\n  add<K extends keyof DocumentEventMap>(\n    el: EventTarget,\n    type: K,\n    listener: (this: Document, ev: DocumentEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions,\n  ): void\n  add(\n    el: EventTarget,\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ): void\n  remove<K extends keyof DocumentEventMap>(\n    el: EventTarget,\n    type: K,\n    listener: (this: Document, ev: DocumentEventMap[K]) => any,\n    options?: boolean | EventListenerOptions,\n  ): void\n  remove(\n    el: EventTarget,\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions,\n  ): void\n}\n\nexport function useEventListeners(): EventListeners {\n  const listeners = useRef(new Map())\n  const currentListeners = listeners.current\n\n  const add = useCallback((el: any, type: any, listener: any, options: any) => {\n    listeners.current.set(listener, { type, el, options })\n    el.addEventListener(type, listener, options)\n  }, [])\n\n  const remove = useCallback(\n    (el: any, type: any, listener: any, options: any) => {\n      el.removeEventListener(type, listener, options)\n      listeners.current.delete(listener)\n    },\n    [],\n  )\n\n  useEffect(\n    () => () => {\n      currentListeners.forEach((value, key) => {\n        remove(value.el, value.type, key, value.options)\n      })\n    },\n    [remove, currentListeners],\n  )\n\n  return { add, remove }\n}\n","import { useClickable, UseClickableProps } from \"@chakra-ui/clickable\"\nimport { createDescendantContext } from \"@chakra-ui/descendant\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { lazyDisclosure, LazyMode } from \"@chakra-ui/lazy-utils\"\nimport { callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  useId,\n  createElement,\n} from \"react\"\n\n/* -------------------------------------------------------------------------------------------------\n * Create context to track descendants and their indices\n * -----------------------------------------------------------------------------------------------*/\n\nexport const [\n  TabsDescendantsProvider,\n  useTabsDescendantsContext,\n  useTabsDescendants,\n  useTabsDescendant,\n] = createDescendantContext<HTMLButtonElement>()\n\n/* -------------------------------------------------------------------------------------------------\n * useTabs - The root react hook that manages all tab items\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseTabsProps {\n  /**\n   * The orientation of the tab list.\n   * @default \"horizontal\"\n   */\n  orientation?: \"vertical\" | \"horizontal\"\n  /**\n   * If `true`, the tabs will be manually activated and\n   * display its panel by pressing Space or Enter.\n   *\n   * If `false`, the tabs will be automatically activated\n   * and their panel is displayed when they receive focus.\n   *\n   * @default false\n   */\n  isManual?: boolean\n  /**\n   * Callback when the index (controlled or un-controlled) changes.\n   */\n  onChange?: (index: number) => void\n  /**\n   * The index of the selected tab (in controlled mode)\n   */\n  index?: number\n  /**\n   * The initial index of the selected tab (in uncontrolled mode)\n   */\n  defaultIndex?: number\n  /**\n   * The id of the tab\n   */\n  id?: string\n  /**\n   * Performance 🚀:\n   * If `true`, rendering of the tab panel's will be deferred until it is selected.\n   * @default false\n   */\n  isLazy?: boolean\n  /**\n   * Performance 🚀:\n   * The lazy behavior of tab panels' content when not active.\n   * Only works when `isLazy={true}`\n   *\n   * - \"unmount\": The content of inactive tab panels are always unmounted.\n   * - \"keepMounted\": The content of inactive tab panels is initially unmounted,\n   * but stays mounted when selected.\n   *\n   * @default \"unmount\"\n   */\n  lazyBehavior?: LazyMode\n  /**\n   * The writing mode direction.\n   *\n   * - When in RTL, the left and right navigation is flipped\n   * @default \"ltr\"\n   */\n  direction?: \"rtl\" | \"ltr\"\n}\n\n/**\n * Tabs hook that provides all the states, and accessibility\n * helpers to keep all things working properly.\n *\n * Its returned object will be passed unto a Context Provider\n * so all child components can read from it.\n * There is no document link yet\n * @see Docs https://chakra-ui.com/docs/components/useTabs\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/tabpanel/\n */\nexport function useTabs(props: UseTabsProps) {\n  const {\n    defaultIndex,\n    onChange,\n    index,\n    isManual,\n    isLazy,\n    lazyBehavior = \"unmount\",\n    orientation = \"horizontal\",\n    direction = \"ltr\",\n    ...htmlProps\n  } = props\n\n  /**\n   * We use this to keep track of the index of the focused tab.\n   *\n   * Tabs can be automatically activated, this means selection follows focus.\n   * When we navigate with the arrow keys, we move focus and selection to next/prev tab\n   *\n   * Tabs can also be manually activated, this means selection does not follow focus.\n   * When we navigate with the arrow keys, we only move focus NOT selection. The user\n   * will need not manually activate the tab using `Enter` or `Space`.\n   *\n   * This is why we need to keep track of the `focusedIndex` and `selectedIndex`\n   */\n  const [focusedIndex, setFocusedIndex] = useState(defaultIndex ?? 0)\n\n  const [selectedIndex, setSelectedIndex] = useControllableState({\n    defaultValue: defaultIndex ?? 0,\n    value: index,\n    onChange,\n  })\n\n  /**\n   * Sync focused `index` with controlled `selectedIndex` (which is the `props.index`)\n   */\n  useEffect(() => {\n    if (index != null) {\n      setFocusedIndex(index)\n    }\n  }, [index])\n\n  /**\n   * Think of `useDescendants` as a register for the tab nodes.\n   */\n  const descendants = useTabsDescendants()\n\n  /**\n   * Generate a unique id or use user-provided id for the tabs widget\n   */\n  const uuid = useId()\n  const uid = props.id ?? uuid\n  const id = `tabs-${uid}`\n\n  return {\n    id,\n    selectedIndex,\n    focusedIndex,\n    setSelectedIndex,\n    setFocusedIndex,\n    isManual,\n    isLazy,\n    lazyBehavior,\n    orientation,\n    descendants,\n    direction,\n    htmlProps,\n  }\n}\n\nexport type UseTabsReturn = Omit<\n  ReturnType<typeof useTabs>,\n  \"htmlProps\" | \"descendants\"\n>\n\nexport const [TabsProvider, useTabsContext] = createContext<UseTabsReturn>({\n  name: \"TabsContext\",\n  errorMessage:\n    \"useTabsContext: `context` is undefined. Seems you forgot to wrap all tabs components within <Tabs />\",\n})\n\nexport interface UseTabListProps {\n  children?: React.ReactNode\n  onKeyDown?: React.KeyboardEventHandler\n  ref?: React.Ref<any>\n}\n\n/**\n * Tabs hook to manage multiple tab buttons,\n * and ensures only one tab is selected per time.\n *\n * @param props props object for the tablist\n */\nexport function useTabList<P extends UseTabListProps>(props: P) {\n  const { focusedIndex, orientation, direction } = useTabsContext()\n\n  const descendants = useTabsDescendantsContext()\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const nextTab = () => {\n        const next = descendants.nextEnabled(focusedIndex)\n        if (next) next.node?.focus()\n      }\n      const prevTab = () => {\n        const prev = descendants.prevEnabled(focusedIndex)\n        if (prev) prev.node?.focus()\n      }\n      const firstTab = () => {\n        const first = descendants.firstEnabled()\n        if (first) first.node?.focus()\n      }\n      const lastTab = () => {\n        const last = descendants.lastEnabled()\n        if (last) last.node?.focus()\n      }\n\n      const isHorizontal = orientation === \"horizontal\"\n      const isVertical = orientation === \"vertical\"\n\n      const eventKey = event.key\n\n      const ArrowStart = direction === \"ltr\" ? \"ArrowLeft\" : \"ArrowRight\"\n      const ArrowEnd = direction === \"ltr\" ? \"ArrowRight\" : \"ArrowLeft\"\n\n      const keyMap: Record<string, React.KeyboardEventHandler> = {\n        [ArrowStart]: () => isHorizontal && prevTab(),\n        [ArrowEnd]: () => isHorizontal && nextTab(),\n        ArrowDown: () => isVertical && nextTab(),\n        ArrowUp: () => isVertical && prevTab(),\n        Home: firstTab,\n        End: lastTab,\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        action(event)\n      }\n    },\n    [descendants, focusedIndex, orientation, direction],\n  )\n\n  return {\n    ...props,\n    role: \"tablist\",\n    \"aria-orientation\": orientation,\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\nexport type UseTabListReturn = ReturnType<typeof useTabList>\n\nexport interface UseTabOptions {\n  /**\n   * If `true`, the `Tab` won't be toggleable\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and `isDisabled`, the `Tab` will be focusable but not interactive.\n   * @default false\n   */\n  isFocusable?: boolean\n}\n\nexport interface UseTabProps\n  extends Omit<UseClickableProps, \"color\">,\n    UseTabOptions {}\n\n/**\n * Tabs hook to manage each tab button.\n *\n * A tab can be disabled and focusable, or both,\n * hence the use of `useClickable` to handle this scenario\n */\nexport function useTab<P extends UseTabProps>(props: P) {\n  const { isDisabled = false, isFocusable = false, ...htmlProps } = props\n\n  const { setSelectedIndex, isManual, id, setFocusedIndex, selectedIndex } =\n    useTabsContext()\n\n  const { index, register } = useTabsDescendant({\n    disabled: isDisabled && !isFocusable,\n  })\n\n  const isSelected = index === selectedIndex\n\n  const onClick = () => {\n    setSelectedIndex(index)\n  }\n\n  const onFocus = () => {\n    setFocusedIndex(index)\n    const isDisabledButFocusable = isDisabled && isFocusable\n    const shouldSelect = !isManual && !isDisabledButFocusable\n    if (shouldSelect) {\n      setSelectedIndex(index)\n    }\n  }\n\n  const clickableProps = useClickable({\n    ...htmlProps,\n    ref: mergeRefs(register, props.ref),\n    isDisabled,\n    isFocusable,\n    onClick: callAllHandlers(props.onClick, onClick),\n  })\n\n  const type: \"button\" | \"submit\" | \"reset\" = \"button\"\n\n  return {\n    ...clickableProps,\n    id: makeTabId(id, index),\n    role: \"tab\",\n    tabIndex: isSelected ? 0 : -1,\n    type,\n    \"aria-selected\": isSelected,\n    \"aria-controls\": makeTabPanelId(id, index),\n    onFocus: isDisabled ? undefined : callAllHandlers(props.onFocus, onFocus),\n  }\n}\n\nexport interface UseTabPanelsProps {\n  children?: React.ReactNode\n}\n\nconst [TabPanelProvider, useTabPanelContext] = createContext<{\n  isSelected: boolean\n  id: string\n  tabId: string\n  selectedIndex: number\n}>({})\n\n/**\n * Tabs hook for managing the visibility of multiple tab panels.\n *\n * Since only one panel can be show at a time, we use `cloneElement`\n * to inject `selected` panel to each TabPanel.\n *\n * It returns a cloned version of its children with\n * all functionality included.\n */\nexport function useTabPanels<P extends UseTabPanelsProps>(props: P) {\n  const context = useTabsContext()\n\n  const { id, selectedIndex } = context\n\n  const validChildren = getValidChildren(props.children)\n\n  const children = validChildren.map((child, index) =>\n    createElement(\n      TabPanelProvider,\n      {\n        key: index,\n        value: {\n          isSelected: index === selectedIndex,\n          id: makeTabPanelId(id, index),\n          tabId: makeTabId(id, index),\n          selectedIndex,\n        },\n      },\n      child,\n    ),\n  )\n\n  return { ...props, children }\n}\n\n/**\n * Tabs hook for managing the visible/hidden states\n * of the tab panel.\n *\n * @param props props object for the tab panel\n */\nexport function useTabPanel(props: Record<string, any>) {\n  const { children, ...htmlProps } = props\n  const { isLazy, lazyBehavior } = useTabsContext()\n  const { isSelected, id, tabId } = useTabPanelContext()\n\n  const hasBeenSelected = useRef(false)\n  if (isSelected) {\n    hasBeenSelected.current = true\n  }\n\n  const shouldRenderChildren = lazyDisclosure({\n    wasSelected: hasBeenSelected.current,\n    isSelected,\n    enabled: isLazy,\n    mode: lazyBehavior,\n  })\n\n  return {\n    // Puts the tabpanel in the page `Tab` sequence.\n    tabIndex: 0,\n    ...htmlProps,\n    children: shouldRenderChildren ? children : null,\n    role: \"tabpanel\",\n    \"aria-labelledby\": tabId,\n    hidden: !isSelected,\n    id,\n  }\n}\n\n/**\n * Tabs hook to show an animated indicators that\n * follows the active tab.\n *\n * The way we do it is by measuring the DOM Rect (or dimensions)\n * of the active tab, and return that as CSS style for\n * the indicator.\n */\nexport function useTabIndicator(): React.CSSProperties {\n  const context = useTabsContext()\n  const descendants = useTabsDescendantsContext()\n\n  const { selectedIndex, orientation } = context\n\n  const isHorizontal = orientation === \"horizontal\"\n  const isVertical = orientation === \"vertical\"\n\n  // Get the clientRect of the selected tab\n  const [rect, setRect] = useState(() => {\n    if (isHorizontal) return { left: 0, width: 0 }\n    if (isVertical) return { top: 0, height: 0 }\n    return undefined\n  })\n\n  const [hasMeasured, setHasMeasured] = useState(false)\n\n  // Update the selected tab rect when the selectedIndex changes\n  useSafeLayoutEffect(() => {\n    if (selectedIndex == null) return\n\n    const tab = descendants.item(selectedIndex)\n    if (tab == null) return\n\n    // Horizontal Tab: Calculate width and left distance\n    if (isHorizontal) {\n      setRect({ left: tab.node.offsetLeft, width: tab.node.offsetWidth })\n    }\n\n    // Vertical Tab: Calculate height and top distance\n    if (isVertical) {\n      setRect({ top: tab.node.offsetTop, height: tab.node.offsetHeight })\n    }\n\n    // Prevent unwanted transition from 0 to measured rect\n    // by setting the measured state in the next tick\n    const id = requestAnimationFrame(() => {\n      setHasMeasured(true)\n    })\n\n    return () => {\n      if (id) {\n        cancelAnimationFrame(id)\n      }\n    }\n  }, [selectedIndex, isHorizontal, isVertical, descendants])\n\n  return {\n    position: \"absolute\",\n    transitionProperty: \"left, right, top, bottom, height, width\",\n    transitionDuration: hasMeasured ? \"200ms\" : \"0ms\",\n    transitionTimingFunction: \"cubic-bezier(0, 0, 0.2, 1)\",\n    ...rect,\n  }\n}\n\nfunction makeTabId(id: string, index: number) {\n  return `${id}--tab-${index}`\n}\n\nfunction makeTabPanelId(id: string, index: number) {\n  return `${id}--tabpanel-${index}`\n}\n"],"names":["props","permission","others","permissionReducer","useSelector","state","authenticationReducer","permissionArr","split","includes","_jsx","IconButton","_Fragment","typical","errors","register","getValues","handleSubmit","setValue","trigger","otherProps","_jsxs","FormControl","variant","id","inputSetting","name","isInvalid","children","InputGroup","icon","InputLeftElement","pointerEvents","Icon","as","color","boxSize","Input","hasOwnProperty","errorBorderColor","type","rules","placeholder","required","FormLabel","t","style","InputRightElement","MdOutlineCheck","Stack","pt","Text","fontSize","renderPanel","languageKeys","Object","keys","supportLanguages","filter","f","sort","lang","setLang","useState","Tabs","isLazy","colorScheme","TabList","map","k","idx","_supportLanguages","Tab","onClick","TabPanels","TabPanel","total","current","setCurrent","params","usePath","navigate","useNavigate","location","useLocation","page","FIRST_PAGE","size","PAGE_SIZE","ButtonGroup","spacing","justifyContent","width","base","md","beforePagination","MdOutlineNavigateBefore","Array","from","Math","ceil","splice","index","Button","parseInt","pathname","createQuery","gotoPage","nextPagination","MdOutlineNavigateNext","overFlowText","whiteSpace","overflow","textOverflow","_ref","data","columns","sorting","setSorting","React","table","useReactTable","getCoreRowModel","onSortingChange","getSortedRowModel","TableContainer","className","Table","Thead","getHeaderGroups","headerGroup","Tr","headers","header","meta","column","columnDef","Th","getToggleSortingHandler","isNumeric","flexRender","getContext","chakra","span","pl","getIsSorted","TriangleDownIcon","TriangleUpIcon","Tbody","getRowModel","rows","row","getVisibleCells","cell","Td","permissionGroup","onSelect","Accordion","allowMultiple","d","find","original","c","accessorKey","AccordionItem","AccordionButton","isArray","Box","flex","textAlign","e","stopPropagation","HStack","Checkbox","onChange","toString","value","target","checked","AccordionIcon","AccordionPanel","pb","Flex","my","Divider","columnHelper","createColumnHelper","isMobile","useBreakpointValue","DataAccordion","DataTable","accessor","info","dispatch","useDispatch","defaultFilter","search","form","defaultForm","useForm","useEffect","onSubmit","direction","maxW","FloatTextInput","FormButton","addNewsHandler","actions","OPEN_DRAWER","ADD_NEWS_DRAWER","getColumns","deleteNewsHandler","_info$row$original$im","Avatar","title","src","image","url","jsonParse","getValue","_info$getValue","Badge","typeName","v","mr","colors","CustomIconButton","HiOutlineEye","Link","to","makeUrl","FiEdit2","FiTrash2","activedLanguage","languageReducer","list","newsReducer","useCallback","modalActions","OPEN_MODAL","DELETE_CONFIRMATION_MODAL","next","executeAndClose","DELETE_ASYNC","CLOSE_MODAL","useMemo","ResponsiveTable","AnnouncePage","fullPath","GET_LIST_ASYNC","lg","bg","boxShadow","borderRadius","sm","px","SearchNewsForm","overflowX","MultiLanguageTabs","NewsList","alignItems","Pagination","AvatarStylesProvider","useAvatarStyles","createContext","hookName","providerName","initials","_a","names","firstName","lastName","length","charAt","AvatarName","getInitials","rest","styles","jsx","div","role","__css","label","displayName","GenericAvatarIcon","jsxs","svg","viewBox","height","fill","AvatarImage","srcSet","onError","onLoad","loading","iconLabel","ignoreFallback","referrerPolicy","crossOrigin","status","useImage","cloneElement","img","alt","objectFit","baseStyle","display","textTransform","fontWeight","position","flexShrink","forwardRef","ref","useMultiStyleConfig","isLoaded","setIsLoaded","showBorder","onLoadProp","borderColor","omitThemingProps","avatarStyles","borderWidth","container","cx","dataAttr","callAllHandlers","sizes","setStatus","imageRef","useRef","load","flush","Image","srcset","onload","event","onerror","error","useSafeLayoutEffect","shouldShowFallbackImage","fallbackStrategy","useStyleConfig","verticalAlign","panelsProps","useTabPanels","useTabsStyles","tabpanels","tablistProps","useTabList","tablistStyles","tablist","TabsStylesProvider","errorMessage","htmlProps","descendants","ctx","useTabs","context","isFitted","_","rootProps","tabsStyles","root","TabsDescendantsProvider","TabsProvider","tabProps","useTab","tabStyles","outline","tab","button","panelProps","useTabPanel","tabpanel","isValidElement","element","tagName","isContentEditable","useClickable","arguments","undefined","htmlRef","isDisabled","isFocusable","clickOnEnter","clickOnSpace","onMouseDown","onMouseUp","onKeyDown","onKeyUp","tabIndex","tabIndexProp","onMouseOver","onMouseLeave","isButton","setIsButton","isPressed","setIsPressed","listeners","Map","currentListeners","add","el","listener","options","set","addEventListener","remove","removeEventListener","delete","forEach","key","useEventListeners","trulyDisabled","handleClick","preventDefault","currentTarget","focus","onDocumentKeyUp","document","handleKeyDown","defaultPrevented","metaKey","nativeEvent","shouldClickOnEnter","click","handleKeyUp","onDocumentMouseUp","handleMouseDown","preventScroll","handleMouseUp","handleMouseOver","handleMouseLeave","mergeRefs","node","disabled","useTabsDescendantsContext","useTabsDescendants","useTabsDescendant","createDescendantContext","defaultIndex","isManual","lazyBehavior","orientation","focusedIndex","setFocusedIndex","selectedIndex","setSelectedIndex","useControllableState","defaultValue","uuid","useId","useTabsContext","nextTab","nextEnabled","prevTab","prev","prevEnabled","isHorizontal","isVertical","eventKey","action","ArrowDown","ArrowUp","Home","firstTab","first","firstEnabled","End","lastTab","last","lastEnabled","isSelected","makeTabId","makeTabPanelId","onFocus","TabPanelProvider","useTabPanelContext","getValidChildren","child","createElement","tabId","hasBeenSelected","lazyDisclosure","wasSelected","enabled","mode","hidden"],"sourceRoot":""}