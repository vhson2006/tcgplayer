{"version":3,"file":"static/js/7769.ad7067ac.chunk.js","mappings":"+NAKA,MA8BA,EA9B2BA,IACzB,MAAM,YAAEC,GAAgBD,EAClBE,EAAeC,OAAOC,KAAKC,EAAAA,IAAkBC,QAAQC,GAAiB,MAANA,IAAWC,QACzEC,EAAMC,IAAYC,EAAAA,EAAAA,UAAcT,EAAa,IAErD,OACEU,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,QAAM,EAACC,QAAQ,eAAeC,YAAY,QAAOC,SAAA,EACrDC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAAAF,SAEJf,EAAakB,KAAI,CAACC,EAAQC,KAAW,IAAAC,EAAA,OACjCL,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAAWC,QAASA,IAAMf,EAAQW,GAAGJ,UACtCS,EAAAA,EAAAA,GAAmD,QAAlDH,EAAClB,EAAAA,GAAiBgB,UAAgC,IAAAE,OAAA,EAAjDA,EAAmDI,OAD9CL,EAEJ,OAIdJ,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CAAAX,SAENf,EACGkB,KAAI,CAACb,EAAQe,KACZJ,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAAAZ,SACNhB,EAAYQ,IADAa,SAMlB,C,yNCpBX,MA+BA,EA/BwBtB,IACtB,MAAM8B,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,OAAEC,IAAWC,EAAAA,EAAAA,KAAaC,GAAeA,EAAMC,eAC/C,MAAEC,EAAK,QAAEC,GAAYL,GACrB,SAAEM,IAAaC,EAAAA,EAAAA,KAMrB,OAJAC,EAAAA,EAAAA,YAAU,KACRZ,EAASa,EAAAA,GAAQC,yBAAyBJ,GAAU,GACnD,KAGD5B,EAAAA,EAAAA,MAACiC,EAAAA,EAAK,CAAA5B,SAAA,EACJL,EAAAA,EAAAA,MAACkC,EAAAA,EAAM,CAACC,GAAI,EAAE9B,SAAA,EACZC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAU,CAACC,QAAQ,OAAOC,WAAW,YAAYC,GAAIC,EAAAA,GAAMC,IAAIC,EAAAA,EAAAA,IAAQ,sBAAuBtB,MAC/Fd,EAAAA,EAAAA,KAAC8B,EAAAA,EAAU,CAACC,QAAQ,OAAOC,WAAW,cAAcC,GAAIC,EAAAA,GAAMC,IAAIC,EAAAA,EAAAA,IAAS,uBAAsBd,SAAiBR,SAEpHd,EAAAA,EAAAA,KAACqC,EAAAA,EAAiB,CAChBtD,YAAcQ,IACZG,EAAAA,EAAAA,MAAA4C,EAAAA,SAAA,CAAAvC,SAAA,EACEC,EAAAA,EAAAA,KAACuC,EAAAA,EAAI,CAACC,UAAW,EAAGC,SAAS,MAAMR,GAAG,IAAGlC,SAAEqB,IAASsB,EAAAA,EAAAA,GAAUtB,GAAO7B,MACrES,EAAAA,EAAAA,KAAC2C,EAAAA,GAAG,CAAA5C,UACFC,EAAAA,EAAAA,KAAA,OAAK4C,GAAG,SAASC,UAAU,SAAQ9C,SAAEsB,IAAWyB,EAAAA,EAAAA,KAAMJ,EAAAA,EAAAA,GAAUrB,GAAS9B,eAK3E,C","sources":["modules/others/MultiLanguageTabs.tsx","pages/dashboard/announce/news/detail.tsx"],"sourcesContent":["import { useState } from \"react\"\nimport { Tabs, TabList, Tab, TabPanels, TabPanel } from \"@chakra-ui/react\"\nimport { supportLanguages, SupportLanguageTypes } from \"commons/config\"\nimport { t } from \"commons/languages/helper\"\n\nconst MultiLanguageTabs = (props: any) => {\n  const { renderPanel } = props;\n  const languageKeys = Object.keys(supportLanguages).filter((f: any) => f !== '/').sort()\n  const [ lang, setLang ] = useState<any>(languageKeys[0]);\n\n  return (\n    <Tabs isLazy variant='soft-rounded' colorScheme='green'>\n      <TabList>\n        {\n          languageKeys.map((k: any, idx: number) => (\n              <Tab key={idx} onClick={() => setLang(k)}>\n                {t(supportLanguages[k as keyof SupportLanguageTypes]?.name)}\n              </Tab>\n            ))\n        }\n      </TabList>\n      <TabPanels>\n        {\n          languageKeys\n            .map((f: any, idx: number) => (\n              <TabPanel key={idx}>\n                {renderPanel(lang)}\n              </TabPanel>\n            ))\n        }\n      </TabPanels>\n    </Tabs>\n  )\n}\n\nexport default MultiLanguageTabs","import { actions } from \"components/dashboard/announce/news/slice\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Box, HStack, Stack, Text } from '@chakra-ui/react'\r\nimport parse from 'html-react-parser';\r\nimport { Link, useLocation, useParams } from \"react-router-dom\";\r\nimport { FormButton } from \"modules/buttons/FormButton\";\r\nimport { makeUrl } from \"utils/link\";\r\nimport MultiLanguageTabs from \"modules/others/MultiLanguageTabs\";\r\nimport { jsonParse } from \"utils/json\";\r\n\r\nconst DetailNewsPage = (props: any) => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation()\r\n  const { detail } = useSelector((state: any) => state.newsReducer); \r\n  const { title, content } = detail;\r\n  const { newsSlug } = useParams();\r\n  \r\n  useEffect(() => {\r\n    dispatch(actions.GET_DETAIL_BY_SLUG_ASYNC(newsSlug))\r\n  }, []);\r\n  \r\n  return (\r\n    <Stack>\r\n      <HStack pb={5}>\r\n        <FormButton typical='list' permission=\"news.view\" as={Link} to={makeUrl('/dashboard/announce', location)}/>\r\n        <FormButton typical='edit' permission=\"news.update\" as={Link} to={makeUrl(`/dashboard/announce/${newsSlug}/edit`, location)}/>\r\n      </HStack>\r\n      <MultiLanguageTabs \r\n        renderPanel={(lang: string) => (\r\n          <>\r\n            <Text noOfLines={1} fontSize='3xl' as='b'>{title && jsonParse(title)[lang]}</Text>\r\n            <Box>\r\n              <div id=\"editor\" className=\"editor\">{content && parse(jsonParse(content)[lang])}</div>\r\n            </Box>\r\n          </>\r\n        )}\r\n      />\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default DetailNewsPage;"],"names":["props","renderPanel","languageKeys","Object","keys","supportLanguages","filter","f","sort","lang","setLang","useState","_jsxs","Tabs","isLazy","variant","colorScheme","children","_jsx","TabList","map","k","idx","_supportLanguages","Tab","onClick","t","name","TabPanels","TabPanel","dispatch","useDispatch","location","useLocation","detail","useSelector","state","newsReducer","title","content","newsSlug","useParams","useEffect","actions","GET_DETAIL_BY_SLUG_ASYNC","Stack","HStack","pb","FormButton","typical","permission","as","Link","to","makeUrl","MultiLanguageTabs","_Fragment","Text","noOfLines","fontSize","jsonParse","Box","id","className","parse"],"sourceRoot":""}