{"version":3,"file":"static/js/9574.9019c641.chunk.js","mappings":"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","sources":["components/dashboard/announce/generate/forms/EditForm.tsx","pages/dashboard/announce/generate/edit.tsx","../node_modules/@chakra-ui/card/src/card-body.tsx","../node_modules/@chakra-ui/card/src/card-context.tsx","../node_modules/@chakra-ui/card/src/card.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Stack, Button, StackDivider, VisuallyHidden, CardBody, Card } from \"@chakra-ui/react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { defaultForm } from \"utils/form\";\r\nimport { actions as generateActions } from \"components/dashboard/announce/generate/slice\";\r\nimport TextInput from \"modules/forms/TextInput\";\r\nimport GenerateStatus from \"components/dashboard/announce/generate/inputs/GenerateStatus\";\r\nimport { jsonParse } from \"utils/json\";\r\n\r\nconst EditGenerateForm = (props: any) => {\r\n  const dispatch = useDispatch();\r\n  const form = defaultForm(useForm);\r\n  const [ generateStatus, setGenerateStatus ] = useState<any>();\r\n  const { submitRef } = props;\r\n  const { detail } = useSelector((state: any) => state.generateReducer); \r\n  const { activedLanguage } = useSelector((state: any) => state.languageReducer); \r\n\r\n  useEffect(() => {\r\n    if (detail.command) {\r\n      form.setValue('command', detail.command);\r\n    }\r\n    setGenerateStatus({value: detail?.status?.type, label: jsonParse(detail?.status?.typeName)[activedLanguage]});\r\n  }, [detail.command, detail.status]);\r\n\r\n  const editGenerateHandler = (data: any) => {\r\n    const editParams = {\r\n      ...data,\r\n      id: detail.id,\r\n      status: generateStatus?.value\r\n    };\r\n    dispatch(generateActions.UPDATE_ASYNC(editParams));\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={form.handleSubmit(editGenerateHandler)}>\r\n      <Card w='100%'>\r\n        <CardBody>\r\n          <Stack spacing=\"5\" divider={<StackDivider />}>\r\n            <TextInput {...form} typical='generate-command' />\r\n            <GenerateStatus value={generateStatus} onChange={setGenerateStatus} />\r\n            <VisuallyHidden>\r\n              <Button type=\"submit\" ref={submitRef}/>\r\n            </VisuallyHidden>\r\n          </Stack> \r\n        </CardBody>\r\n      </Card>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default EditGenerateForm;","import { actions } from \"components/dashboard/announce/generate/slice\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { HStack } from \"@chakra-ui/react\";\r\nimport { FormButton } from \"modules/buttons/FormButton\";\r\nimport { makeUrl } from \"utils/link\";\r\nimport { Link, useLocation, useParams } from \"react-router-dom\";\r\nimport { Fragment, useRef } from \"react\";\r\nimport EditGenerateForm from \"components/dashboard/announce/generate/forms/EditForm\";\r\n\r\nconst EditGeneratePage = (props: any) => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const submitRef = useRef<any>(null);\r\n  const { generateId } = useParams();\r\n\r\n  const submitHandler = (e: any) => {\r\n    submitRef.current.click();\r\n  };\r\n  \r\n  useEffect(() => {\r\n    dispatch(actions.GET_DETAIL_ASYNC(generateId))\r\n  }, []);\r\n  \r\n  return (\r\n    <Fragment>\r\n      <HStack pb={5} >\r\n        <FormButton typical='list' permission=\"generate.view\" as={Link} to={makeUrl('/dashboard/announce/generate', location)} />\r\n        <FormButton typical='view' permission=\"generate.view\" as={Link} to={makeUrl(`/dashboard/announce/generate/${generateId}`, location)} />\r\n        <FormButton typical='save' permission=\"generate.update\" onClick={submitHandler} />\r\n      </HStack>\r\n      <EditGenerateForm submitRef={submitRef}/>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default EditGeneratePage;","import { cx } from \"@chakra-ui/shared-utils\"\nimport { forwardRef, HTMLChakraProps, chakra } from \"@chakra-ui/system\"\nimport { useCardStyles } from \"./card-context\"\n\nexport interface CardBodyProps extends HTMLChakraProps<\"div\"> {}\n\nexport const CardBody = forwardRef<CardBodyProps, \"div\">(function CardBody(\n  props,\n  ref,\n) {\n  const { className, ...rest } = props\n  const styles = useCardStyles()\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-card__body\", className)}\n      __css={styles.body}\n      {...rest}\n    />\n  )\n})\n","import { createStylesContext } from \"@chakra-ui/system\"\n\nexport const [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\")\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  forwardRef,\n  HTMLChakraProps,\n  ThemingProps,\n  chakra,\n  omitThemingProps,\n  useMultiStyleConfig,\n  SystemProps,\n} from \"@chakra-ui/system\"\nimport { CardStylesProvider } from \"./card-context\"\n\nexport type CardOptions = {\n  /**\n   * The flex direction of the card\n   */\n  direction?: SystemProps[\"flexDirection\"]\n  /**\n   * The flex alignment of the card\n   */\n  align?: SystemProps[\"alignItems\"]\n  /**\n   * The flex distribution of the card\n   */\n  justify?: SystemProps[\"justifyContent\"]\n}\n\nexport interface CardProps\n  extends HTMLChakraProps<\"div\">,\n    CardOptions,\n    ThemingProps<\"Card\"> {}\n\nexport const Card = forwardRef<CardProps, \"div\">(function Card(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props)\n\n  const styles = useMultiStyleConfig(\"Card\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-card\", className)}\n      __css={{\n        display: \"flex\",\n        flexDirection: direction,\n        justifyContent: justify,\n        alignItems: align,\n        position: \"relative\",\n        minWidth: 0,\n        wordWrap: \"break-word\",\n        ...styles.container,\n      }}\n      {...rest}\n    >\n      <CardStylesProvider value={styles}>{children}</CardStylesProvider>\n    </chakra.div>\n  )\n})\n"],"names":["props","dispatch","useDispatch","form","defaultForm","useForm","generateStatus","setGenerateStatus","useState","submitRef","detail","useSelector","state","generateReducer","activedLanguage","languageReducer","useEffect","_detail$status","_detail$status2","command","setValue","value","status","type","label","jsonParse","typeName","_jsx","onSubmit","handleSubmit","data","editParams","id","generateActions","UPDATE_ASYNC","children","Card","w","CardBody","_jsxs","Stack","spacing","divider","StackDivider","TextInput","typical","GenerateStatus","onChange","VisuallyHidden","Button","ref","location","useLocation","useRef","generateId","useParams","actions","GET_DETAIL_ASYNC","Fragment","HStack","pb","FormButton","permission","as","Link","to","makeUrl","onClick","e","current","click","EditGenerateForm","forwardRef","className","rest","styles","useCardStyles","jsx","chakra","div","cx","__css","body","CardStylesProvider","createStylesContext","direction","justify","align","omitThemingProps","useMultiStyleConfig","display","flexDirection","justifyContent","alignItems","position","minWidth","wordWrap","container"],"sourceRoot":""}